<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>input-method on Goofing Osamu</title>
    <link>/tags/input-method/</link>
    <description>Recent content in input-method on Goofing Osamu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 May 2019 13:00:00 +0900</lastBuildDate>
    
	<atom:link href="/tags/input-method/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>辞書ライセンス問題</title>
      <link>/jp/2019/05/06/jpn-ime-resource-03/</link>
      <pubDate>Mon, 06 May 2019 13:00:00 +0900</pubDate>
      
      <guid>/jp/2019/05/06/jpn-ime-resource-03/</guid>
      <description>辞書のライセンス V.2.x以降の現代書き言葉UniDic（旧名：unidic-mecab）および、Ver.2.2.x以降の 現代話し言葉UniDicは、完全なフリーソフトウェアになりました。 GPL/LGPL/BSD Licenseのトリプルライセンスですので、営利目的での利用模含めて 自由に行うことができます。一番良いです。
Jumann++ や mecab-ipadic-neologdは、&amp;rdquo;Apache License, Version 2.0&amp;rdquo; です。
SJ3 は BSDライセンスのようです。
ちなみに、&amp;rdquo;Apache License, Version 2.0&amp;rdquo;はGPLとのライセンスとしての互換性を改善 されているとのこと。
これらデーターベース辞書を利用して逆変換できないところまで抽出加工処理して、 特定の目的のためのデーター構造を持った内容のデーターベース辞書を 「新たなデーターベース辞書」として作った場合、そのライセンスはどうあるべきかは、 基本的に「新たなデーターベース辞書」の作成者が設定すると考えます。
そもそも辞書データーとは、元の著作権のある各種文書データーから、元文書での使用 例を参考に元の著作権の影響を受けないよう編集し新規に作成したもので、他の辞書 情報も作成の際に参考にして作成しるわけで、それでも新規性ある別の物として作成 される物です。
まず、元情報を利用条件を守って利用する必要はあります。ただ、研究調査での使用 許可等があれば、それを使って「新たなデーターベース辞書」を作成した場合、 元ファイルを同梱しない限り、「新たなデーターベース辞書」の頒布に元辞書を継承 する必要は無いと考えます。
もちろん、他者が作成した元情報が逆変換で選択抽出できる場合は、元ファイル自体 が物理的に含まれなくとも元ファイルを同梱と実質的に同じ状況ということで、 「新たなデーターベース辞書」だけではないので、元データーのライセンスの 頒布条件の回避はできません。つまり、その場合には「新たなデーターベース辞書」 も元ファイルの頒布条件を遵守をする必要があるのは言うまでもありません。
新規辞書作成を考える場合、情報源として入手した頻度情報は「事実」なので、 その物自体は排他的に所有できないと考えます。ただし、提供形態やデーター構成 には著作権があるかもしれないので、新規データー作成する際には完全に逆変換がで きないよう、作成者の新規判断と折込や・作成者が工夫した方法で他情報と組み合 わせたり・数値情報の目的に合わせた粗化処理がされるべきです。
漢字かな変換データー辞書の作成で、参照辞書の使用条件を守りながら研究用に使用し、 同音異字のpmwをひらがな表記が同じ品詞の和で抽出するとか、出現順位で抽出する とか、10倍ごとのバケット表記とする等で抽出することで、逆変換不可能にした データーとすれば、その作成されたデーターは「新たなデーターベース辞書」と考 えられ、それら抽出済みデーターをソースとして用いる限り参照辞書の頒布ライセン ス制約の対象外と考えます。
同音異字は結局何らかの少し離れたところまでの近接語効果を入れない限り、頻度だ けや文法的制約からだけでは解消しないので、同音異字の中の頻度１番以外の言葉の 以外は頻度情報は順位以外は重要ではありません。
まあ、如何にライセンスコンタミを防ぐかは微妙な問題ではあります。</description>
    </item>
    
    <item>
      <title>日本語辞書リソース</title>
      <link>/jp/2019/05/05/jpn-ime-resource-02/</link>
      <pubDate>Sun, 05 May 2019 12:00:00 +0900</pubDate>
      
      <guid>/jp/2019/05/05/jpn-ime-resource-02/</guid>
      <description> フリー（無償）で入手し、研究用なら制約無く使用ができる各種辞書の情報です。
Unidic 2018-03版: 87万語
$ wc -l lex.csv 872831 lex.csv  canna辞書(Anthy) 13万の読みの異なる言葉
$ wc -l gcanna.t 137488 gcanna.t  Jumann++  基本語彙辞書 3万語 WEB等含む合計 90万語  mecab-ipadic-neologd  語彙数: 55万語 https://github.com/neologd https://github.com/neologd/mecab-ipadic-neologd/blob/master/README.ja.md http://www.anlp.jp/proceedings/annual_meeting/2017/pdf_dir/B6-1.pdf  SJ3 辞書  rikuku  article: http://poiut.web.fc2.com/computer/sj3/sj3public.html   SJ3はBSDなので使いやすいですね。
Jdicと、リンクされた辞書情報サイト  Online Japanese Dictionaries and Glossaries http://nihongo.monash.edu/onlinejdic.html 慣用句 http://buna.yorku.ca/japanese/idiom_all.html EDICT等はCreative Commons Attribution-ShareAlike Licence (V3.0) https://www.edrdg.org/edrdg/licence.html  </description>
    </item>
    
    <item>
      <title>日本語入力(anthy)関係リソース</title>
      <link>/jp/2019/05/05/jpn-ime-resource-01/</link>
      <pubDate>Sun, 05 May 2019 01:29:00 +0900</pubDate>
      
      <guid>/jp/2019/05/05/jpn-ime-resource-01/</guid>
      <description> anthy 関連のリソース（日本語中心）  Debian (*****)  wiki: http://wiki.debian.org/Teams/DebianAnthy salsa: https://salsa.debian.org/input-method-team/anthy BTS: https://bugs.debian.org/cgi-bin/pkgreport.cgi?src=anthy  G-HAL (engine patch)  2019-04-06: http://www.fenix.ne.jp/~G-HAL/soft/nosettle/im.html#anthy 2018-05-31: http://www.fenix.ne.jp/~G-HAL/whatsnew/20182nd.html#whatsnew2018530 2011-10-08: http://www.fenix.ne.jp/~G-HAL/soft/nosettle/anthy.html  vagus (dictionary patch)  2012-03-10: http://vagus.seesaa.net/ https://osdn.net/projects/alt-cannadic/wiki/FrontPage  ootnegx  2011-12-03: http://ootnegx.blogspot.com/2011/12/g-hal-anthy.html  archlinux wiki  2018-08-30: https://wiki.archlinux.jp/index.php/Uim_%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%82%92%E5%85%A5%E5%8A%9B#Anthy  kakurasan  2010-11-20: https://kakurasan.hatenadiary.jp/entry/20101120/p1 2010-12-14: https://kakurasan.hatenadiary.jp/entry/20101214/p1  arekorebibouroku  2017-09-24 http://arekorebibouroku.hateblo.jp/entry/2017/09/24/171025  rikuku  2013-07-12: https://rikukuu.blog.fc2.com/blog-entry-199.html 2019-01-13: https://rikukuu.blog.fc2.com/blog-entry-640.html data: https://drive.google.com/file/d/1RW1mcYzbfp0dPfzFmnSme-duiGqYtzRb/view?usp=sharing   </description>
    </item>
    
    <item>
      <title>キーボード入力モード選択</title>
      <link>/jp/2019/03/23/gnome-uskb-im-select/</link>
      <pubDate>Sat, 23 Mar 2019 18:59:13 +0900</pubDate>
      
      <guid>/jp/2019/03/23/gnome-uskb-im-select/</guid>
      <description>キーボード入力モード選択 Gnome等のLinuxの日本語環境でキーボード入力モード選択がトグル（ローテート） 動作（日本語/英語の交互切り替え)だと今どっちか分からなくなって結構不便です。
SUPER-SPACEとSHIFT-SUPER-SPACEがGnomeの側でのキーボード入力ソースの デフォルトの切り替えキーです。
input methos内での切り替えは、昔のWindowsと同じ&amp;rdquo;zenkaku-hankaku&amp;rdquo;とか、 うに径で良く使う&amp;rdquo;space&amp;rdquo;が良くバインドされています。
切り替えが、状態が分からなくとも一発でできるのが望ましいので、 その設定方法を以下に記します。
日本語キーボードの設定方法 日本語キーボードだと、変換と無変換キーを、Anthyの入力モード HiraganaとLatinへの切り替えにAnthyの中のキーバインディングで 設定して常にibus-anthyで使うことで何とかなります。これは特に 問題ありません。
同じことを、WindowsのIMEでもALT-漢字、漢字、ALT-`等でのトグル 動作が嫌いで、Macの真似でこんなキーバインディングしています。 （最近のWindows10はどうも噂ではこんな感じのキーバインドのようですね。）
英語キーボードでの課題 ただ、英語キーボードの場合は変換と無変換キーはありません。
 SHIFTと普通の文字との組み合わせは論外。 CTRLと普通の文字との組み合わせも、VIM使うので全部先約有り。 ALTと普通の文字との組み合わせも、メニューへのショートカットで全部先約有り。  こういったことも有り、私はCTRL-SPACE, SHIFT-SPACEを一時使っていました
ところが、SHIFT-SPACEやCTRL-SPACEのどちらかをLokalizeなどのアプリ が使っていました。（ALT-SPACEは既にGNOMEが使っている）
こうなると、お手上げです。
英語キーボードでの設定方法 (Gnome+ibus+Anthy) アプリとの喧嘩を避けるにはGUI用にリザーブされている、GUIキー（SUPERと かWindowsキーともいう)やMENUキー等をGNOME側からのコントロールでibusの 各入力エンジン選択に使うのが良いわけです。（GUIキーはAnthyなどのアプリ のパネルからは使えません。）
そこで、GNOMEの設定→デバイス→キーボードの登場です。Gnomeは内部では通常 ibusしかサポートしていないので、ここに書いてあることは他のuim,fcitx,scim ではそのまま使えません。ここで、使用するINPUT METHODが２つしか無いとします。 英語とANTHYとしましょう。
設定リストの一番下のプラスをたたき、新規定義を追加します。
キーとして使えそうなのはSUPER-,、SUPER-.、SUPER-/、SUPER-&amp;lsquo;、SUPER-\、 SUPER-RETURNあたりです。SUPER-jもあいてますね。 SUPER-lで画面ロックなので、このまわりのSUPER-k、SUPER-;、は避けたいですね。 SUPER-a、SUPER-s、SUPER-n、SUPER-m、SUPER-TAB、SUPER-vも先約があるので 使えません。SUPERが左手なので右手のキーとの組み合わせが使いやすいかな。
inputSources0 がANTHYとすると、変換キーはないのでSUPER-j (Japanese) をあてがいましょう。Commandは長いけど１行で入れてください。
Name InputMethod_0 Command gdbus call --session --dest org.gnome.Shell --object-path /org/gnome/Shell --method org.gnome.Shell.Eval &amp;quot;imports.ui.status.keyboard.getInputSourceManager().inputSources[0].activate()&amp;quot; Shortcut SUPER-j  もし、これが嫌ならSUPER-,、SUPER-.、SUPER-/などの右下のキーとSUPERの 組み合わせが使いやすい気がします。 （２つ以上のインプットメソッドを使うときにも便利ですね。)</description>
    </item>
    
  </channel>
</rss>
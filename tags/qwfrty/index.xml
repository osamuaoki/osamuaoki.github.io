<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>qwfrty on Goofing Osamu</title>
    <link>/tags/qwfrty/</link>
    <description>Recent content in qwfrty on Goofing Osamu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/qwfrty/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>QWFRTY配列</title>
      <link>/jp/2022/02/14/qwfrty/</link>
      <pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>/jp/2022/02/14/qwfrty/</guid>
      <description>背景 MCUを使ったIOTの初等プロジェクトとして、QMKを利用したキーボードを作りました。
結局デフォルトのキー配列に採用したのは、QWERTY配列でした。
ずぼらな性格上、DVORAK, COLMAK, WORKMAN, COLEMAK-DHのいずれも学習障壁が高すぎました。
またVIエディターでのカーソール移動がデフォルト設定では難しくなってしまいます。
ただ、それでは残念なので、「QWFRTY配列」を最適化配列実験用に設定しました。
QWFRTY配列 11個のキーを標準のQWERTYから移動した下記の「QWFRTY配列」をせっかく作ったQMKを利用したキーボードの非QWERTY配列候補としています。
 LEFT HAND RIGHT HAND │ Q │ W │_F_│ R │ T │ │ Y │_D_│_K_│_G_│ P │ │ A │_O_│_E_│_I_│_U_│ │_S_│_H_│_J_│ L │ ; │ │ Z │ X │ C │ V │ B │ │ N │ M │ , │ . │ / │ QWERTY配列からの変更点（覚え方）: キーの移動を以下の用にとらえると覚えられます。
 &amp;ldquo;EOIU&amp;rdquo; -&amp;gt; DVRAK配列の位置に移動。 (&amp;ldquo;E&amp;quot;は下一段、子音文字&amp;quot;SDFG&amp;quot;を除去。外側文字は反対の手の外側に順番に移動) &amp;ldquo;HJKL&amp;quot;を逆Tのカーソールキー位置関係に移動。(&amp;ldquo;L&amp;quot;を軸に1つづつ移動、ホームを空ける) まず、&amp;ldquo;F&amp;rdquo; を左上の空きにななめ1つ移動。 残りの&amp;quot;SDG&amp;rdquo; をこの順番・位置関係を維持しながらで右の空きスペースに順番に移動。  まあ、所詮実験ですが、我ながら悪くない気もします。</description>
    </item>
    
  </channel>
</rss>

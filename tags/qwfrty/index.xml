<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>qwfrty on Goofing Osamu</title>
    <link>/tags/qwfrty/</link>
    <description>Recent content in qwfrty on Goofing Osamu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/qwfrty/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>QWFRTY配列</title>
      <link>/jp/2022/02/14/qwfrty/</link>
      <pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>/jp/2022/02/14/qwfrty/</guid>
      <description>背景 MCUを使ったIOTの初等プロジェクトとして、cgc56というQMKを利用したキーボードを作りました。
デフォルトのキー配列に採用したのは、QWERTY配列でした。ずぼらな性格上、DVORAK, COLMAK, WORKMAN, COLEMAK-DHのいずれも学習障壁が高すぎました。(これらの有名配置だと、VIエディターでのカーソール移動がVIのデフォルト設定では難しくなってしまいます。)
ただ、元々は中指を伸ばして「E」を叩きづらいという個人的課題解決目的のキーボードでした。これだけならEとFのスワップで済ますのも良いのですが、残念なので苦労しない範囲でDVRAKに近づくために「QWFRTY配列」を考え、最適化配列を経験実験用として設定しました。
使ってみて意外とおもしろいので、ここに要点等をメモしておきます。
小さなキーボードでカーソールやINSまで押し込んだので、実際には最右下のキーは、カーソルキーが割り込みもう一つ右に離れています。 ただ直交系キーボード配列なので、比較的に使わない&amp;quot;/&amp;ldquo;キーだし、元々下のキーQWERTYよりは左によっているので問題はないようです。 ちなみに今回完成したキーボードは、PLANCKより4x14と幅があることを利用して、左右の手の間隔をとり、できた真ん中の余分の部分に頻出記号キーを押し込んでいます。
QWFRTY配列 私は、せっかく作ったQMKを利用した自作キーボードのいわゆる最適化キー配列として、11個のキーだけが標準の「QWERTY配列」から移動された配列としています。
名前は、１文字違いでややこしいですが、「QWFRTY配列」としました。キーは位置の要点を抜き出すと以下です。
 LEFT HAND RIGHT HAND │ Q │ W │_F_│ R │ T │ │ Y │_D_│_K_│_G_│ P │ │ A │_O_│_E_│_I_│_U_│ │_S_│_H_│_J_│ L │ ; │ │ Z │ X │ C │ V │ B │ │ N │ M │ , │ . │ / │ まあ、所詮実験レベルのお遊びですが、我ながら悪くない気もします。
cgc56 QWFRTY キーボードデータ 簡易版
QWERTY配列からの変更点（覚え方）: キーの移動を以下の様にとらえると覚えられます。</description>
    </item>
    
  </channel>
</rss>

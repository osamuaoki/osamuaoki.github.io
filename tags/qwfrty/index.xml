<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>qwfrty on Goofing Osamu</title>
    <link>/tags/qwfrty/</link>
    <description>Recent content in qwfrty on Goofing Osamu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/qwfrty/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>QWFRTY配列</title>
      <link>/jp/2022/02/14/qwfrty/</link>
      <pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>/jp/2022/02/14/qwfrty/</guid>
      <description>背景 MCUを使ったIOTの初等プロジェクトとして、QMKを利用したキーボードを作りました。
結局デフォルトのキー配列に採用したのは、QWERTY配列でした。
ずぼらな性格上、DVORAK, COLMAK, WORKMAN, COLEMAK-DHのいずれも学習障壁が高すぎました。
さらにこれらの有名配置だと、VIエディターでのカーソール移動がVIのデフォルト設定では難しくなってしまいます。
元々は中指を伸ばして「E」を叩きづらいという個人的課題解決がスタートで、それをEとFのスワップで済ますのも良いのですが、残念なので苦労しない範囲でDVRAKに近づくために「QWFRTY配列」を考え、最適化配列経験実験用に設定しました。
意外とおもしろい物ができたのでので、ここに要点等をメモしておきます。
最新の詳細状況は、私のQMKソースを見ないと分かりませんが。 小さなキーボードでカーソールやINSまで押し込んだので、実際には最右下のキーは、カーソルキーが割り込みもう一つ右に離れています。 ただ直交系キーボード配列なので、比較的に使わない&amp;quot;/&amp;ldquo;キーだし、元々下のキーQWERTYよりは左によっているので問題はないようです。。 ちなみに今回完成したキーボードは、PLANCKより4x14と幅があることを利用して、左右の手の間隔をとり、できた真ん中の余分の部分に頻出記号キーを押し込んでいます。
QWFRTY配列 私は、せっかく作ったQMKを利用した自作キーボードのいわゆる最適化キー配列として、11個のキーだけが標準の「QWERTY配列」から移動された配列としています。
名前は１文字違いでややこしいですが、「QWFRTY配列」としました。
 LEFT HAND RIGHT HAND │ Q │ W │_F_│ R │ T │ │ Y │_D_│_K_│_G_│ P │ │ A │_O_│_E_│_I_│_U_│ │_S_│_H_│_J_│ L │ ; │ │ Z │ X │ C │ V │ B │ │ N │ M │ , │ . │ / │ まあ、所詮実験レベルのお遊びですが、我ながら悪くない気もします。
QWERTY配列からの変更点（覚え方）: キーの移動を以下の様にとらえると覚えられます。
 &amp;ldquo;EOIU&amp;rdquo; -&amp;gt; DVRAK配列の位置に移動。 (&amp;ldquo;E&amp;quot;は下一段、子音文字&amp;quot;SDFG&amp;quot;を除去。外側文字は反対の手の外側に順番に移動) &amp;ldquo;HJKL&amp;quot;を逆Tのカーソールキー位置関係に移動。(&amp;ldquo;L&amp;quot;を軸に1つづつ移動、ホームを空ける) まず、&amp;ldquo;F&amp;rdquo; を左上の空きにななめ1つ移動。 残りの&amp;quot;SDG&amp;rdquo; をこの順番・位置関係を維持しながらで右の空きスペースに順番に移動。  QWFRTY設計の方針と結果:  eucalyn/dvrak配列の様に母音 (aoeiu) を左手に集める。  交互打鍵をでき、特に日本語との相性も良い 特に頻出の&amp;quot;E&amp;quot;がホームに来るのは大きい それなりによく使う&amp;quot;S&amp;rdquo; &amp;ldquo;D&amp;quot;は動きの良い人差し指   キー移動を必要最小限化する colemak/workman配列のコンセプトは継承。  QWERTYからの移行のメンタルストレスが少ない。   eucalyn配列の vimのカーソールキー (hjkl) をまとめるアイデアを拝借  QWERTYよりむしろ使い安くなった（？）    QWFRTY配列のキー移動の統計:  11/30のキーが移動(下記の他の半分なので、覚えやすい) 大移動は7/30キーのみ  QWFRTY設計の背景事実： 文字数頻度指標 (log圧縮済み、QMKのソース利用)は以下です。（大きいほどよく出てくるので、使いやすいところに置きたい文字）</description>
    </item>
    
  </channel>
</rss>

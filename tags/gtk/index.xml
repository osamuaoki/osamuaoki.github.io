<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gtk on Goofing Osamu</title>
    <link>/tags/gtk/</link>
    <description>Recent content in Gtk on Goofing Osamu</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 May 2023 09:34:46 +0900</lastBuildDate>
    <atom:link href="/tags/gtk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GTK GUI with PyGObject (10)</title>
      <link>/en/2021/07/23/pygi-a/</link>
      <pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate>
      <guid>/en/2021/07/23/pygi-a/</guid>
      <description>Note on recent change of environment for GUI design Since the computer monitor screen has changed fro VGA (4:3) to HDTV (16:9), screen got wider. In other word, we have relatively less vertical space for the computer monitor screen.&#xA;Now cellphones and tablets are powerful enough to use previously Desktop only general purpose programs. Go the GUI need to handle touch events.&#xA;Lastly, X11 is not the only GUI target. Wayland and browser needs to be addressed.</description>
    </item>
    <item>
      <title>GTK GUI with PyGObject (9)</title>
      <link>/en/2021/07/22/pygi-9/</link>
      <pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate>
      <guid>/en/2021/07/22/pygi-9/</guid>
      <description>FYI: If the buggy Glade v=3.38.2 is patched, the complicated manual process is not needed.&#xA;Client-side decoration with GtkHeaderbar using Glade Let&amp;rsquo;s consider to add client-side decorated GtkHeaderBar and to put primary menu with GtkPopover.&#xA;This may not be easy with Glade 3.38.2 on upcoming Debian Bullseye 11 since it is buggy. I created a note on my workaround at the end of this page&#xA;Let&amp;rsquo;s assume Glade is fixed by my patch or any other means and let&amp;rsquo;s use Glade to design GUI.</description>
    </item>
    <item>
      <title>GTK GUI with PyGObject (8)</title>
      <link>/en/2021/07/21/pygi-8/</link>
      <pubDate>Wed, 21 Jul 2021 00:00:00 +0900</pubDate>
      <guid>/en/2021/07/21/pygi-8/</guid>
      <description>Example: Multiline Text Editor with GtkSource.View Next exercise is to create a modal dialog window with Glade similar to Multiline Text Editor&#xA;Doing this with the Gtk.TextView widget is not so challenging. I decided to use GtkSource.View instead to gain access to capability of regex and case sensitivity.&#xA;I didn&amp;rsquo;t see GtkSource.View related widgets in the Glade&amp;rsquo;s available choice list, I first created Multiline Text Editor with Gtk.TextView just to get the general design done.</description>
    </item>
    <item>
      <title>GTK GUI with PyGObject (7)</title>
      <link>/en/2021/07/19/pygi-7/</link>
      <pubDate>Mon, 19 Jul 2021 00:00:05 +0900</pubDate>
      <guid>/en/2021/07/19/pygi-7/</guid>
      <description>Example: GtkIconView Let&amp;rsquo;s go through another notable widget GtkIconView.&#xA;Let&amp;rsquo;s create icon-view.py/icon-view.ui example. It took me a while to make these working since existing examples usually don&amp;rsquo;t use Glade nor Gtk.Template.&#xA;This is very much like GtkTreeView example.&#xA;icon-view.py: import gi gi.require_version(&amp;#34;Gtk&amp;#34;, &amp;#34;3.0&amp;#34;) from gi.repository import Gtk from gi.repository.GdkPixbuf import Pixbuf @Gtk.Template(filename=&amp;#34;icon-view.ui&amp;#34;) class SimpleWindow(Gtk.Window): # corresponding name in XML &amp;#39;class&amp;#39; attribute for this class __gtype_name__ = &amp;#34;icon-views&amp;#34; # corresponding name in XML &amp;#39;id&amp;#39; attribute sets this class member variable liststore1 = Gtk.</description>
    </item>
    <item>
      <title>GTK GUI with PyGObject (6)</title>
      <link>/en/2021/07/19/pygi-6/</link>
      <pubDate>Mon, 19 Jul 2021 00:00:00 +0900</pubDate>
      <guid>/en/2021/07/19/pygi-6/</guid>
      <description>GtkComboBox and GtkComboBoxText GtkComboBox under the &amp;ldquo;Control&amp;rdquo; button GtkComboBoxText under the &amp;ldquo;Cotrol&amp;rdquo; button A GtkComboBox is a widget that allows the user to choose from a list of valid choices offered in Gtk.TreeModel.&#xA;GtkComboBoxText is for the simpler text-only case of GtkComboBox.&#xA;For these let&amp;rsquo;s create combo-box.py/combo-box.ui and combo-box-text.py/combo-box-text.ui examples and compare them. It took me a while to make these working since existing examples usually don&amp;rsquo;t use Glade nor Gtk.</description>
    </item>
    <item>
      <title>GTK GUI with PyGObject (5)</title>
      <link>/en/2021/07/18/pygi-5/</link>
      <pubDate>Sun, 18 Jul 2021 00:00:00 +0000</pubDate>
      <guid>/en/2021/07/18/pygi-5/</guid>
      <description>GtkListBox and GtkFlowBox GtkListBox under the &amp;ldquo;Containers&amp;rdquo; button GtkFlowBox under the &amp;ldquo;Containers&amp;rdquo; button These are like Gtk.Box and Gtk.Grid but its contents can by dynamically sorted and filtered.&#xA;The children of these are Gtk.ListBoxRow and Gtk.FlowBoxChild respectively and these can be fairly complex. If the content of these are simple enough, use of Gtk.TreeView and Gtk.IconView may save your efforts.&#xA;GtkTreeView Although Gtk.TreeView was mentioned as a simpler tool to use than Gtk.</description>
    </item>
    <item>
      <title>GTK GUI with PyGObject (4)</title>
      <link>/en/2021/07/17/pygi-4/</link>
      <pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate>
      <guid>/en/2021/07/17/pygi-4/</guid>
      <description>GtkNotebook and GtkStack GtkNotebook under the &amp;ldquo;Containers&amp;rdquo; button GtkStack under the &amp;ldquo;Containers&amp;rdquo; button These are very similar displaying a selected page out of stacked pages.&#xA;For GtkNotebook, functionality to select page is automatically provided.&#xA;For GtkStack, functionality to select page needs external &amp;ldquo;control&amp;rdquo; widget and it needs to be specified in the property of the GtkStack widget. Such external &amp;ldquo;control&amp;rdquo; widget can be:&#xA;GtkStackSwitcher under the &amp;ldquo;Control&amp;rdquo; button (horizontal/vertical list) GtkStackSidebar under the &amp;ldquo;Control&amp;rdquo; button (vertical list) </description>
    </item>
    <item>
      <title>GTK GUI with PyGObject (3)</title>
      <link>/en/2021/07/16/pygi-3/</link>
      <pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate>
      <guid>/en/2021/07/16/pygi-3/</guid>
      <description>Example: Special button widgets into GUI To put more widgets,&amp;ldquo;Number of items&amp;rdquo; on the left panel of GtkBox was incremented. Some box are further subdivided again with GtkBox with their &amp;ldquo;Orientation&amp;rdquo; settings set to &amp;ldquo;Horizontal&amp;rdquo; instead.&#xA;Then I placed several additional simple &amp;ldquo;Control&amp;rdquo; widgets:&#xA;GtkSpinButton under the &amp;ldquo;Control&amp;rdquo; button GtkToggleButton under the &amp;ldquo;Control&amp;rdquo; button GtkCheckButton under the &amp;ldquo;Control&amp;rdquo; button GtkRadioButton under the &amp;ldquo;Control&amp;rdquo; button GtkFileChooserButton under the &amp;ldquo;Control&amp;rdquo; button Please note I created multiple widgets to learn how they work together with the object.</description>
    </item>
    <item>
      <title>GTK GUI with PyGObject (2)</title>
      <link>/en/2021/07/13/pygi-2/</link>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
      <guid>/en/2021/07/13/pygi-2/</guid>
      <description>Example: Static simple widgets into GUI Dividing area into smaller subdivided areas are mostly done by GtkBox or GtkGrid under the &amp;ldquo;Containers&amp;rdquo; button.&#xA;As a starter, I put GtkBox.&#xA;Then I placed 2 simple &amp;ldquo;Control&amp;rdquo; widgets and a simple GtkLabel &amp;ldquo;Display&amp;rdquo; widget as an easy starter:&#xA;GtkButton under the &amp;ldquo;Control&amp;rdquo; button GtkEntry under the &amp;ldquo;Control&amp;rdquo; button GtkLabel under the &amp;ldquo;Display&amp;rdquo; button I set IDs for these widgets basically by dropping &amp;ldquo;Gtk&amp;rdquo; from the GTk class names.</description>
    </item>
    <item>
      <title>GTK GUI with PyGObject (1)</title>
      <link>/en/2021/07/12/pygi-1/</link>
      <pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate>
      <guid>/en/2021/07/12/pygi-1/</guid>
      <description>Now that GTK4 is used in Debian/Bookworm in 2023, this section is getting outdated. The followings may be interesting to read:&#xA;https://github.com/Taiko2k/GTK4PythonTutorial https://amolenaar.github.io/pgi-docgen/#Gtk-4.0 My objective here is to learn efficient GUI programming with Glade and Python using Gtk.Builder class instead of calling widget classes directly and using decorators offered by Gtk.Templates.&#xA;I only touch on essential concepts in the order of practical importance and skip trivial points and points already addressed in The Python GTK+ 3 Tutorial.</description>
    </item>
  </channel>
</rss>

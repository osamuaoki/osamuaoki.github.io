<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lxc on Goofing Osamu</title>
    <link>/tags/lxc/</link>
    <description>Recent content in lxc on Goofing Osamu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/lxc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>仮想環境(3)</title>
      <link>/jp/2021/01/27/virt-03/</link>
      <pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/jp/2021/01/27/virt-03/</guid>
      <description>chrootの強化版のようなLXCを使ってのデバグ用の仮想環境作成をさらに 深堀りします。
仮想環境とのデーター共有 (LXC) 仮想環境内(development-sid)にホスト側で通常ログインしているのと同じ uid=1000のユーザーを作成します。
$ sudo lxc-start -n development-sid $ sudo lxc-ls -f NAME STATE AUTOSTART GROUPS IPV4 IPV6 UNPRIVILEGED development-buster STOPPED 0 - - - false development-sid RUNNING 0 - 10.0.3.212 - false development-testing STOPPED 0 - - - false $ sudo lxc-attach -n development-sid このユーザーをfishとし、仮想環境内に同一ユーザーアカウントを作成し 基本開発環境を作成し、ログアウトします。
root@development-sid:/# adduser -uid 1000 fish ... root@development-sid:/# apt-get update ... root@development-sid:/# apt-get install mc vim nano- aptitude devscripts ... root@development-sid:/home/fish/# ^D 仮想環境内にインストールされるパッケージは上記でログアウトする前に追加操作 することでカスタマイズ自在に設定できます。</description>
    </item>
    
    <item>
      <title>仮想環境(2)</title>
      <link>/jp/2021/01/08/virt-02/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/jp/2021/01/08/virt-02/</guid>
      <description>chrootを使ってのデバグ用の仮想環境作成をpbuilder/cowbuilderでと言うのは 少々強引です。とはいえ直接chrootやmountコマンドで仮想環境作成というのも 面倒です。そこで、chrootの強化版のようなLXCを使ってのデバグ用の仮想環境 作成を試みます。
ちなみに、DebianではLXDはまだパッケージされていないので、ここでは裸の LXCのインフラを使います。
デバグ用の仮想環境作成 (LXC) LXCを使ってのデバグ用のsid環境の仮想環境作成を試みます。
 $ sudo lxc-create -n development-sid -t debian -- -r sid もし、ミラーが不調なら、安定そうなUSミラーを使います。
 $ sudo lxc-create -n development-sid -t debian -- -r sid \\ --mirror=http://ftp.us.debian.org 意外と簡単です。これで、/var/lib/lxc/development-sid/ 以下のディレクトリーにデバグ用の rootfs以下にコンテナ環境の ファイルシステムとコンテナ環境の設定ファイルconfig が 作成されます。
コンテナ環境のファイルシステム:
 # root@goofy:/var/lib/lxc/development-sid# tree -L 2 -F . ├── config └── rootfs/ ├── bin -&amp;gt; usr/bin/ ├── boot/ ├── dev/ ├── etc/ ├── home/ ├── lib -&amp;gt; usr/lib/ ├── lib32 -&amp;gt; usr/lib32/ ├── lib64 -&amp;gt; usr/lib64/ ├── libx32 -&amp;gt; usr/libx32/ ├── media/ ├── mnt/ ├── opt/ ├── proc/ ├── root/ ├── run/ ├── sbin -&amp;gt; usr/sbin/ ├── selinux/ ├── srv/ ├── sys/ ├── tmp/ ├── usr/ └── var/ コンテナ環境の設定ファイルconfig:</description>
    </item>
    
  </channel>
</rss>

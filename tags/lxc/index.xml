<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lxc on Goofing Osamu</title>
    <link>/tags/lxc/</link>
    <description>Recent content in lxc on Goofing Osamu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/lxc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Container with LXC/LXD (1)</title>
      <link>/en/2023/10/11/lxc-1/</link>
      <pubDate>Wed, 11 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/en/2023/10/11/lxc-1/</guid>
      <description>Here is a memo of me trying to use LXC/LXD on Debian 12 (bookworm).
Container landscape essays Namespaces in operation January 4, 2013 &amp;ndash; series index up to June 15, 2016 Understanding the new control groups API March 23, 2016 The Kubernetes Containers runtime jungle November 9, 2019 LXC 5.0 LTS has been released June, 2022 Docker and the OCI container ecosystem July 26, 2022 The container orchestrator landscape August 23, 2022 LXC and LXD: a different container story September 13, 2022 Progress for unprivileged containers September 28, 2022 Summary: Podman vs.</description>
    </item>
    
    <item>
      <title>仮想環境(6)</title>
      <link>/jp/2021/02/13/virt-06/</link>
      <pubDate>Sat, 13 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/jp/2021/02/13/virt-06/</guid>
      <description>Linux Namespaces の雰囲気が分かったところで、非特権ユーザー権限から立ち 上げられたLXC仮想環境を作ってみます。
非特権LXC実行環境整備 LXC (1:4.0.6-1) をBulleseye環境で/usr/share/doc/lxc/README.Debianの &amp;ldquo;Unprivileged containers&amp;quot;に従って設定していきます。(2021/02)
まずKERNELがunprivileged user namespacesを有効にしていることを確認します。
$ sudo uname -a Linux **** 5.10.0-3-amd64 #1 SMP Debian 5.10.13-1 (2021-02-06) x86_64 GNU/Linux $ sudo sysctl kernel.unprivileged_userns_clone kernel.unprivileged_userns_clone = 1 ユーザーアカウント設定の/etc/subuidと/etc/subgidはすでに設定されていました。 これらは親システムのUIDやGIDからLXCコンテナ内から見えるUIDやGIDへの対応関係定義 しています。
ネットワーク設定は以下を実行：
$ NAME=$(id -un) $ sudo sh -c &amp;#34;echo $NAME veth lxcbr0 10 &amp;gt;&amp;gt; /etc/lxc/lxc-usernet さらに、~/.config/lxc/default.confのユーザー設定を/etc/subuidと /etc/subgidに合わせて以下でします。
$ mkdir -p ~/.config/lxc $ cat &amp;gt;~/.config/lxc/default.conf &amp;lt;&amp;lt; EOF lxc.include = /etc/lxc/default.conf lxc.idmap = u 0 100000 65536 lxc.</description>
    </item>
    
    <item>
      <title>仮想環境(3)</title>
      <link>/jp/2021/01/28/virt-03/</link>
      <pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/jp/2021/01/28/virt-03/</guid>
      <description>引き続きchrootの強化版のようなLXCを使っての仮想環境作成を特権ユーザーが 作成する簡単なケースを深堀りします。
LXC仮想環境の停止 仮想環境のカスタマイズした起動をするためには、作成し起動した仮想環境のSTATEを STOPPED(停止)に確実にします。
$ sudo lxc-stop -n sid $ sudo lxc-ls -f NAME STATE AUTOSTART GROUPS IPV4 IPV6 UNPRIVILEGED buster STOPPED 0 - - - false sid STOPPED 0 - - - false LXC仮想環境とのデーター共有起動 仮想環境のカスタマイズした起動時に、設定変数を指定することで、ホスト側の /home/fish/srcを仮想環境内の/home/fishとしてアクセスできるように共有化 された仮想環境として起動できます。この仮想環境環境にユーザーアカウントに ログインするまでの手順は以下です。
$ sudo lxc-start -n sid \ -s &amp;#34;lxc.mount.entry=/home/fish/src home/fish none bind 0 0&amp;#34; $ sudo lxc-attach -n sid root@sid:/# login sid login: fish Password: ... fish@sid:~$ ここで仮想環境内のホームディレクトリーで見えるのは/home/fish/srcと同一デバイス上の ファイルだけです。(再帰的マウントはされません。)
このLXC仮想環境内でパッケージビルドなどをすれば綺麗な環境ででき、さらにその結果に ホスト側から直接アクセスできます。</description>
    </item>
    
    <item>
      <title>仮想環境(2)</title>
      <link>/jp/2021/01/08/virt-02/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/jp/2021/01/08/virt-02/</guid>
      <description>chrootを使ってのデバグ用のsid仮想環境作成をpbuilder/cowbuilderでと言うのは 少々強引です。とはいえ直接chrootやmountコマンドで仮想環境作成というのも 面倒です。
そこで、chrootの強化版のような環境設定インフラが整ったLXCを使ってのパッケージ 作成やデバグ用や古い環境下での動作確認等に使え、システムの立ち上げや動作が 軽快な仮想環境作成を試みます。(KVMは悪くは無いですが、重いことは否めません)
ちなみに、DebianではLXDはまだパッケージされていないので、ここでは裸の LXC 4.0 のインフラを使います。
WEB上のLXCの情報は古い1.0や2.0の情報とか、新規のUIを提供するLXDの情報が多い ので、bulleseyeベースの現行testing環境で基本操作を行って詳細の確認しています。
Debianの最新のLXC環境を確認するには、まず/usr/share/doc/lxc/README.Debianを しっかり読む必要があります。ここに書かれたユーザー権限で実行されるコンテナ (unprivileged containers) 関連の手動設定は重要です。
まずは、簡単なROOT権限で実行されるコンテナ中心に始めます。
LXC仮想環境作成 LXCを使ってのパッケージ作成やデバグ用等に使うsid環境の仮想環境作成を試みます。
$ sudo lxc-create -n sid -t debian -- -r sid もし、ミラーが不調なら、安定そうなUSミラーを使います。
$ sudo lxc-create -n sid -t debian -- -r sid --mirror=http://ftp.us.debian.org 意外と簡単です。これで、/var/lib/lxc/sid/が作成されます。この中に、sidコンテナ 環境のファイルシステムがrootfsディレクトリー以下に、またそのコンテナ環境の設定 ファイルconfig が作成されています。
コンテナ環境のファイルシステム:
# root@goofy:/var/lib/lxc/sid# tree -L 2 -F . ├── config └── rootfs/ ├── bin -&amp;gt; usr/bin/ ├── boot/ ├── dev/ ├── etc/ ├── home/ ├── lib -&amp;gt; usr/lib/ ├── lib32 -&amp;gt; usr/lib32/ ├── lib64 -&amp;gt; usr/lib64/ ├── libx32 -&amp;gt; usr/libx32/ ├── media/ ├── mnt/ ├── opt/ ├── proc/ ├── root/ ├── run/ ├── sbin -&amp;gt; usr/sbin/ ├── selinux/ ├── srv/ ├── sys/ ├── tmp/ ├── usr/ └── var/ コンテナ環境の設定ファイルconfig:</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>japanese on Goofing Osamu</title>
    <link>/categories/japanese/</link>
    <description>Recent content in japanese on Goofing Osamu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Mar 2019 18:59:13 +0900</lastBuildDate>
    
	<atom:link href="/categories/japanese/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>キーボード入力モード選択</title>
      <link>/jp/2019/03/23/gnome-uskb-im-select/</link>
      <pubDate>Sat, 23 Mar 2019 18:59:13 +0900</pubDate>
      
      <guid>/jp/2019/03/23/gnome-uskb-im-select/</guid>
      <description>キーボード入力モード選択 Gnome等のLinuxの日本語環境でキーボード入力モード選択がトグル動作 （日本語/英語の交互切り替え)だと今どっちか分からなくなって結構不便です。
切り替えが、状態が分からなくとも一発でできるのが望ましいので、 その設定方法を以下に記します。
日本語キーボードの設定方法 日本語キーボードだと、変換と無変換キーを、Anthyの入力モード HiraganaとLatinへの切り替えにAnthyの中のキーバインディングで 設定して常にibus-anthyで使うことで何とかなります。これは特に 問題ありません。
同じことを、WindowsのIMEでもALT-漢字、漢字、ALT-`等でのトグル 動作が嫌いで、Macの真似でこんなキーバインディングしています。 （最近のWindows10はどうも噂ではこんな感じのキーバインドのようですね。）
英語キーボードでの課題 ただ、英語キーボードの場合は変換と無変換キーはありません。
 SHIFTと普通の文字との組み合わせは論外。 CTRLと普通の文字との組み合わせも、VIM使うので全部先約有り。 ALTと普通の文字との組み合わせも、メニューへのショートカットで全部先約有り。  こういったことも有り、私はCTRL-SPACE, SHIFT-SPACEを一時使っていました
ところが、SHIFT-SPACEやCTRL-SPACEもLokalizeなどのアプリ が使っていました。（ALT-SPACEは既にGNOMEが使っている）
こうなると、お手上げです。
英語キーボードでの設定方法 (Gnome) アプリとの喧嘩を避けるにはGUI用にリザーブされている、GUIキー（SUPERと かWindowsキーともいう)やMENUキー等を入力モード選択に使うのが良いわけです。
ただこれはAnthyなどのアプリからは使えません。
そこで、GNOMEの設定→デバイス→キーボードの登場です。
まず、使いたくないデフォルト設定のSUPER-SPACEやSUPER-SHIFT-SPACEを TYPINGにある設定を選び、出てきた設定変更の画面でバックスペースを用いて ともに無効にします。
つぎに、設定リストの一番下のプラスをたたき、新規定義を追加します。
ここで、使用するINPUT METHODが２つしか無いとします。英語とANTHYとしましょう。
inputSources[0]がANTHYとすると、変換キーはないので右にあってまず使わない MENUキーをあてがいましょう。Commandは長いけど１行で入れてください。
Name InputMethod_0 Command gdbus call --session --dest org.gnome.Shell --object-path /org/gnome/Shell --method org.gnome.Shell.Eval &amp;quot;imports.ui.status.keyboard.getInputSourceManager().inputSources[0].activate()&amp;quot; Shortcut MENU  もし、MENUキーを使うのが嫌ならSUPER-,、SUPER-.、SUPER-/などの右下の キーとSUPERの組み合わせが使いやすい気がします。（２つ以上のインプットメソッド を使うときに便利ですね。)
inputSources[1]がENGLISHとすると、これには使わなくなったSUPER-SPACE をあてがいましょう。
Name InputMethod_1 Command gdbus call --session --dest org.gnome.Shell --object-path /org/gnome/Shell --method org.</description>
    </item>
    
    <item>
      <title>anthyのユーザー辞書</title>
      <link>/jp/2019/02/09/anthy-dict/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/jp/2019/02/09/anthy-dict/</guid>
      <description>Anthyのソースを見るとメイン 辞書以外のユーザー辞書は、単漢字入力などの入力文字列として半角tを最後 につけた辞書が、ファイル名「*.t」で多数含まれ配布されています。
（もっとも、現在のDebianのソースは NIIBE Yutakaさんが最近再構成したので、 ファイルの起源はどうもalt-cannadicは由来かもしれません）
これらは個人用辞書用と言うことですが、現在（２０１９年２月）の時点では 「郵便番号→住所」変換をするためのzipcode.t以外はバイナリーパッケージに コピーされていないので直接システムに導入するようにはなっていません。
ただ同梱された「郵便番号→住所」変換をするための辞書は「７桁半角数字＋半角t」 を入力すると郵便番号に対応する住所の文字列を吐き出すようになっているように 見受けます。
実際にanthyをibus-anthyの下で動作させると「７桁半角数字＋半角t」や、 他の「t」で終わる文字列を入れても何も起こりません。ibus-anthyの下では このzipcode.tは明らかに使われていません。
良く見るとibus-anthyが
/usr/share/ibus-anthy/dicts/emoji.t /usr/share/ibus-anthy/dicts/era.t /usr/share/ibus-anthy/dicts/oldchar.t /usr/share/ibus-anthy/dicts/symbol.t /usr/share/ibus-anthy/dicts/zipcode.t  をインストールして、GUIの設定が「~/.anthy/*.t」からシムリンクをはるなど してこれらをユーザー辞書として使えるようにしているようです。
ただこれらのユーザー辞書では、入力文字列として半角tを最後つけることはされて いません。「郵便番号→住所」変換をするための辞書は「３桁全角数字、 全角の長音(UTF-8=E383BC, Unicode=U+30FC)、４桁全角数字」を入力すると、 郵便番号に対応する住所の文字列を対応させるようになっていますし、実際の 動作もそうです。
どうもこの違いは、使うフロントエンドによって提供されるローマ字入力から かなに変換される際のルールが異なることが背景にあるようです。 （「uim」は使っていないのであくまで推測です）
 「ibus-anthy」 数字・記号入力は全角数字・記号、単ローマ字入力は大文字半角 「uim」 数字・記号入力は半角数字・記号、単ローマ字入力は小文字半角  ローマ字入力からのかな漢字変換は、どうも使うフロントエンドによって少々動作が 違うので要注意です。
そもそもこの変な変換辞書スタイルは、昔の「canna辞書」由来かもしれません。</description>
    </item>
    
    <item>
      <title>日本語単語頻度</title>
      <link>/jp/2019/02/09/word-freq/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/jp/2019/02/09/word-freq/</guid>
      <description>BCCWJ  語彙調査データ：  https://pj.ninjal.ac.jp/corpus_center/archive.html　（２００４） https://pj.ninjal.ac.jp/corpus_center/files/goihyo_frq_ver.1.0.txt　3万語  『現代日本語書き言葉均衡コーパス』語彙表：
 https://pj.ninjal.ac.jp/corpus_center/bccwj/freq-list.html　（２０１１） https://pj.ninjal.ac.jp/corpus_center/bccwj/bcc-chu-suw.html (1.0E8 data, 短単位語彙表：18万語網羅） https://pj.ninjal.ac.jp/corpus_center/bccwj/bcc-chu-luw.html (8.3E7 data, 長単位語彙表: 243万語網羅）
$ wc -l BCCWJ_frequencylist_* 2434722 BCCWJ_frequencylist_luw_ver1_1.tsv 185137 BCCWJ_frequencylist_suw_ver1_1.tsv    BCCWJ短単位語彙表    頻度順位 積算出現率     1 0.048   10 0.303   100 0.556   1000 0.752   10000 0.933   100000 0.997 (6 sample)   150000 1.</description>
    </item>
    
  </channel>
</rss>
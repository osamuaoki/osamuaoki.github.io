<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debian on Goofing Osamu</title>
    <link>/categories/debian/</link>
    <description>Recent content in Debian on Goofing Osamu</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Aug 2025 16:26:15 +0900</lastBuildDate>
    <atom:link href="/categories/debian/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rescue media(2)</title>
      <link>/en/2025/08/22/rescue-02/</link>
      <pubDate>Fri, 22 Aug 2025 00:00:00 +0000</pubDate>
      <guid>/en/2025/08/22/rescue-02/</guid>
      <description>This is updated memo of Rescue media(1) (in Japanese).&#xA;Rescue media There are many iso images which are useful for system administration and rescue tasks available on the web. Here are some of the notable ones:&#xA;GParted live GOOD: active GOOD: Debian based system rescue media. GOOD: GUI partition manager BAD: Currently, Debian Lacks GUI LVM manager like blivet-gui TODO: Follow Create GParted live from scratch to install blivet-gui deb pakage debian-installer (netinst) GOOD: active and stable GOOD: This facilitates official Debian system install.</description>
    </item>
    <item>
      <title>dgit cheatsheet</title>
      <link>/en/2022/05/27/dgit-cheatsheet01/</link>
      <pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate>
      <guid>/en/2022/05/27/dgit-cheatsheet01/</guid>
      <description>dgit Cheatsheet Create new Debian packaging repository for salsa.debian.org as follows:&#xA;$ git clone -o upstream $HTTPS_UPSTREAM_URL $REPO_NAME $ git remote set-url --push upstream DONT_PUSH $ git checkout -b debian/latest ... debianize as dgit-maint-merge(7) workflow Patch applied source tree (single-debian-patch, auto-commit) Ensure to have d/changelog matching the latest upstream tag Use &amp;#34;git deborig&amp;#34; to make upstream tarball $ git deborig $ sbuild # test build $ git remote add origin $GIT_MY_URL $ git push --set-upstream origin debian/latest .</description>
    </item>
    <item>
      <title>git submodule (1)</title>
      <link>/en/2021/08/28/git-submodule-01/</link>
      <pubDate>Sat, 28 Aug 2021 00:00:00 +0000</pubDate>
      <guid>/en/2021/08/28/git-submodule-01/</guid>
      <description>The git submodule update --init is nice. I checked how all these repos are managed.&#xA;If I want to move submodule, I don&amp;rsquo;t need delete and clone again. I can simply move it with &amp;ldquo;git mv &amp;lt;oldpath&amp;gt; &amp;lt;newpath&amp;gt;&amp;rdquo; while we keep using the same local copy of repo.&#xA;Let&amp;rsquo;s see how this is done.&#xA;&amp;lt;modulename&amp;gt;/.gitmodules This file is checked in to the parent Git repository and contains:&#xA;[submodule &amp;#34;pack/github/opt/ale&amp;#34;] path = pack/ale url = https://github.</description>
    </item>
    <item>
      <title>dgit workflow</title>
      <link>/en/2019/02/11/dgit-workfow01/</link>
      <pubDate>Mon, 11 Feb 2019 21:53:26 +0900</pubDate>
      <guid>/en/2019/02/11/dgit-workfow01/</guid>
      <description>For Debian maintainer, there can be 4 approaches for maintaining git repository with dgit. Let me get all key points of manpages.&#xA;tutorials model tool history patch quilt maintainer dgit-maint-native(7) native git(1) upstream git (same) N/A upstream dgit-maint-merge(7) merge git merge(1) upstream git applied merged upstream involved dgit-maint-debrebase(7) rebasish git-debrebase(1) upstream git applied series pure downstream dgit-maint-gbp(7) gbp git-buildpackage(1) upstream tar unapplied series pure downstream Here, the maintainer column indicates relationship of the maintainer to the upstream development.</description>
    </item>
  </channel>
</rss>

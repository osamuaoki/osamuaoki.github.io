<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on Goofing Osamu</title>
    <link>/categories/web/</link>
    <description>Recent content in web on Goofing Osamu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="/categories/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Debianで青色申告2023 (e-Tax)</title>
      <link>/jp/2024/03/10/etax2023/</link>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>/jp/2024/03/10/etax2023/</guid>
      <description>以下が、正しい対応かどうかは、私は保証できません。
青色申告＋確定申告 今年は会社員を終えたので、医療費控除などの「確定申告」のみならず、「青色申告」にもチャレンジしました。
e-taxは、通常の給与生活者用の「確定申告」のリンクからスタートし入力したデーターは、「青色申告」の方から入って作るデーターに後からマージできないので要注意です。結局、「青色申告」のリンクから初めて、ほぼ同様のページに行き着きすべて入れ直しました。
e-TaxがWindows専用問題 e-Taxソフト(WEB版)を使うのがDebianでの基本です。
公共性が求められる国家機関のサービスが、十分な理由なく特定ベンダーの有償製品のWindowsオンリーに限定のみのサポートと表示されている現状には懸念があります。
この「サポート」の件は無視します。あくまで「これ以外で使用禁止」などはないので、間抜けな制約は、PCブラウザーのExtensionで、Windowsのふりをすれば、最近のPC WEB(Debian)＋携帯(iPhone)で十分乗り切れるということが、２０２２年度確定申告の際に判明しています。
ふるさと納税関連 ふるさと納税関連のデーター入力は、マイナポータルで連携していたので、仲介業者のXMLデーターが使えて楽でした。
医療費控除 医療費控除も、マイナポータルで連携していたので、健康保険組合のデーターが使えて楽なはずでしたが要注意でした。
医療機関からのデーターで、修正申請関係が、ほぼ確定申告時に反映されていない。 健康保険組合のデーターだけだと、非保険の治療（歯科関連）が抜けている。（当たり前ですが） 健康保険組合のデーターだけだと、控除対象の交通費がリストアップされていない。（当たり前ですが） 健康保険組合の医療費データーは、かなり間抜けな構造（XMLをCSVに落し込んだ感じのテキストファイル）で、集計シートに読み込むのにスクリプト前処理をし、LibreOffice上で表計算を使いながら実際の領収書と照合し整形しました。最後は国税庁提供の医療費集計フォームにLibreOfficeでコピペで張り込みアップロードしました。医療機関名の２０文字制約等、要注意です。
スクリプト前処理は、私のgithubにあるmedformスクリプトを、医療費（家族毎別々に取得）のCSVファイルのあるフォルダーに置き、以下で対応しました。
$ ./medform &amp;lt; FILENAME.csv 参考にした先人のウエッブページ GnuCash を利用して帳簿をつけたり青色申告することを書いた、先人のウエッブページで面白かったものを以下に記します。
GnuCashで決算 (2023-01-03) 実務的な期首・期末処理手順（簡潔） てすの暮らしの知恵 (Search=gnucash) リンク先は宣伝多いことあり 【GnuCash】確定申告・国税納入方法まとめ (2023-02-17) GnuCashによる確定申告に必要な帳簿と決算書の作成 (2020-02-24) Days of speed: GnuCasH記事集 GnuCashで仕訳帳, 総勘定元帳, 貸借対照表, 損益計算書の出力と気づいたことメモ (2020-03-20) GnuCashで決算と期首処理 (2018-03-07) プロセスを箇条書きで綺麗に整理 個人事業主になって初めて青色申告をすることになったのでメモとTips (2018-02-12) (Internet Archive) GnuCash に勘定科目を登録する - GNU の青色申告: 一般用勘定科目テンプレート (Internet Archive) GnuCash に勘定科目を登録する - GNU の青色申告: エンジニア用勘定科目テンプレート これらテンプレートのコピーと私のテンプレートを私のGITHUBにも置いてます Hideo Saito さんのorangeProse の Startup記事 平成26年度確定申告のタイムアタック (2015-03-13) ２年目（簡潔） GnuCash ―― 決算整理と期首整理 (2014-03-22)　初年の記録（詳しい） [StartUp003]GnuCash用TKC互換・個人事業主勘定科目配布です (2013-03-23) DROPBOX link切れ 日本語訳: GnuCash ガイド Gnucash を使った複式簿記の準備 GnuCashは、数学的なところはしっかりして、会計処理が分かっていれば上手く使えるのかもしれませんが、素人にわかりやすいWizardのようなサポート機能はない感じで、実務的な売掛・買掛処理などのやこしい機能の使い方や、e-Tax経由での青色申告の際に必要な期首・期末の会計年度間処理は少々ハードルがあります。この点は、先人の情報を参考にして考えました。</description>
    </item>
    
    <item>
      <title>Debianで確定申告2022 (e-Tax)</title>
      <link>/jp/2023/02/28/etax2022/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/jp/2023/02/28/etax2022/</guid>
      <description>確定申告 日本の国税庁のウエッブサイト からクリックしていくと、一見以下のようなWindows・Mac環境のみを推奨する説明なので、 これら以外からの電子申請が無理な感さえ受けます。
実際にはDebian GNU/Linuxシステムからでも、以前から制約が甘い「ID・パスワード方式」 を選べば、さすがに「推奨環境」には挙げてもらえていませんが、拒否されること無く Debianで申請ができました。実際に私も使用していました。
以前は専用カードリーダーが必要な問題他もあったので、敢えて「マイナンバーカード」利用 にチャレンジしていませんでした。
2023年の2月からスマホと連携できるようになり「マイナンバーカード」を 使っての申請が簡単にできるようになりました。ただ、「マイナンバーカード」 を利用しようとすると、過去の専用カードリーダーと同様で ユーザー・エージェントチェックに引っかかり前に進めなくなります。
結局今年は，「医療費集計フォーム」はDebian上のLibreOfficeで作成しましたが、実際の2022年度分の申請にはとりあえず 上記ユーザー・エージェントチェック問題を避けるべくWindows10のPCのChromeを使いました。
無事申請し終わってみて振り返ると、Debianを使っての申請ができないのは、どう考えても 前時代的なユーザー・エージェントチェックだけが理由の気がしました。
申請に当たってはバイナリープログラムの導入等は一切ありませんでした。スマホとの連携は スクリーン表示なので、デバイスドライバーが引っかかるような障害があるとも思えません。
ユーザー・エージェント文字列というメカニズム自体、すでにgoogleが非推奨としている 中で、何か簡単に文字列を変えるツールは無いものかと探しました。良いのがあります
User-Agent Switcher and Manager &amp;ndash; Chrome/Chromium用 User-Agent Switcher and Manager &amp;ndash; firefox用 Chromeでこれを試してみました。Debian上のChromeでWindowsのふりの設定ができます。
この設定をした後は、上記のようにユーザー・エージェントチェックに引っかかり前に進めなくなることはなく、どうも何事もなく前に進めていました。（最後までしたわけでは無いんですが…）
医療費控除やふるさと納税のために来年度確定申告する際には、これを試します。
NOTE: Chromiumでも、Googleアカウントにloginする必要はありますが、Chromeと同じextensionが導入できます。
マイナポータル 2023-09-24現在、スマホのQRコード読み取り機能を使って、上記同等のUser-Agent Switcherを設定したPC(Linux)のフラウザー経由でWindows 10環境のふりをすると「マイナポータル」へのログインをしてのアクセスが可能です。ポイントは以下です。
マイナポータル　← このサイトにUser-Agent Switcherを設定したPC(Linux)でつなぎ、「ログイン」をする。 スマホのマイナポータルのアプリを立ち上げる。 スマホのマイナポータルのアプリでは、「ログイン」しない。（これは、スマホでのログイン用） スマホ画面下の真ん中の薄い「読取り」と書かれた、QRコードアイコンを押す。 PC画面上のQRコードをスマホで読み込む。 言われたとおり、パスコードを入れたり、マイナンバーカードを読んだりする。 </description>
    </item>
    
    <item>
      <title>Initial setup for hugo (2)</title>
      <link>/en/2019/02/09/initial-setup02/</link>
      <pubDate>Sat, 09 Feb 2019 11:15:56 +0900</pubDate>
      
      <guid>/en/2019/02/09/initial-setup02/</guid>
      <description>Costomization wishlist Let&amp;rsquo;s customize web site contents.
I want to have 2 separate directories for English and Japanese contents. Main menu should have link to the list of contents dedicated for English and Japanese contents The list of contents needs to be customized. The following pages gave me good starting points.
https://www.jakewiesler.com/blog/hugo-directory-structure/ https://sourceforge.net/p/hugo-generator/wiki/markdown_syntax/ Customization example Here are what I did:
Since I don&amp;rsquo;t use content/_index.Rmarkdown, I erased it. In order to save typing, I renamed content/_index.</description>
    </item>
    
    <item>
      <title>Initial setup for hugo (1)</title>
      <link>/en/2019/02/09/initial-setup01/</link>
      <pubDate>Sat, 09 Feb 2019 11:00:56 +0900</pubDate>
      
      <guid>/en/2019/02/09/initial-setup01/</guid>
      <description>Initial hugo setups Let&amp;rsquo;s set up a local git repository for a simple personal web pages with blog support using hugo on Debian.
$ sudo apt-get install hugo $ cd /path/to # where you can write $ hugo new site &amp;lt;webbuildtree&amp;gt; Congratulations! Your new Hugo site is created in /path/to/osamuaoki. Just a few more steps and you&amp;#39;re ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.</description>
    </item>
    
  </channel>
</rss>

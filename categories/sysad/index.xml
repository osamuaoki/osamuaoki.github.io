<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sysad on Goofing Osamu</title>
    <link>/categories/sysad/</link>
    <description>Recent content in sysad on Goofing Osamu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="/categories/sysad/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Development system (2)</title>
      <link>/en/2021/04/09/dev-02/</link>
      <pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/en/2021/04/09/dev-02/</guid>
      <description>Local repo After reading https://wiki.debian.org/DebianRepository/Setup checking their popularity, I decided to go with reprepro package.
Here, I follow https://wiki.debian.org/DebianRepository/SetupWithReprepro (It was slightly outdated. I update it.)
Setting up an web server  $ sudo apt install apache2 Now you can see a nice &amp;ldquo;Default Page&amp;rdquo; at &amp;ldquo;[::1]&amp;rdquo; (or &amp;ldquo;127.0.0.1&amp;rdquo; for IPV4) using browser.
Let&amp;rsquo;s create a simple directory tree for single distribution case.
 $ sudo bash -i # mkdir -p /var/www/html/repo # cat &amp;gt; /etc/apache2/conf-available/repos.</description>
    </item>
    
    <item>
      <title>Development system (1)</title>
      <link>/en/2021/04/03/dev-01/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/en/2021/04/03/dev-01/</guid>
      <description>Development infrastructure In order to keep development setups to be simple and robust, I changed development infrastructure.
 For package test build, I decided to move to schroot. For package build, I decided to move to sbuild (a schroot wrapper). For package test for each GUI setups, I decided to set up KVM.  (I was suffering sudden cowbuilder failures. That was another motivation.)
Planned infrastructure includes:
 APT proxy on the host WS.</description>
    </item>
    
    <item>
      <title>Usability tips: Debian GNOME Workstation</title>
      <link>/en/2021/01/15/debian-buster-10-usability/</link>
      <pubDate>Fri, 15 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/en/2021/01/15/debian-buster-10-usability/</guid>
      <description>Workstation usability Let me keep up note on configuring and administrating my workstation under Debian Buster (10) GNU/Linux. This is non-hardware specific tips.
EFI-based firmware updates Install gnome-firmware package and invoke GUI to update firmware on devices supported by fwupd using Linux Vendor Firmware Service.
Thinkpad EFI firmware and SSD firmware were updated.
GUI Desktop customization Install gnome-tweak package to the system and tweaked to add &amp;ldquo;Applications&amp;rdquo; to top bar etc.</description>
    </item>
    
    <item>
      <title>Hardware tips: ThinkPad T14 Gen 1 (AMD)</title>
      <link>/en/2021/01/07/thinkpad-t14-gen-1-amd/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/en/2021/01/07/thinkpad-t14-gen-1-amd/</guid>
      <description>Let me keep up note on configuring and administrating my ThinkPad T14 Gen 1 (AMD) under Debian GNU/Linux. This is hardware specific tips.
My system has 2 NVMe SSDs:
 AMD Ryzen™ 5 PRO 4650U &amp;ndash; 6 cores, 12 threads 32GB (PC4-25600 DDR4 SDRAM) &amp;ndash; after adding aftermarket 16GB SDRAM WDC PC SN520 SDAPMUW-128G-1001 (20370001) &amp;ndash; Original Western Digital 128GB SSD TS2TMTE220S (42B8T4EA) &amp;ndash; Aftermarket Transcend 2TB SSD  Official Information Sources  T14 Gen 1 (type 20UD, 20UE) Laptop (ThinkPad) Product Home Removal and Replacement Videos - ThinkPad T14 Gen 1 Forum  Adding 2TB SSD (2280 both side) The original Western Digital 128GB PCIe SSD (2242, IC on top side only) is removed and moved with thermal pad to the unused PCIe slot intended for WAN card.</description>
    </item>
    
    <item>
      <title>Rescue media(1)</title>
      <link>/jp/2020/05/30/rescue-01/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/jp/2020/05/30/rescue-01/</guid>
      <description>UEFIとかMBRとかいろいろある昨今のRescue mediaを探しました。
Grubのレスキューイメージもありますが、これを直接操るのは結構大変 と思っていたら、 Super Grub2 と言う便利なものがあることに気づきました。
Super Grub2はUEFIとかMBRの設定が壊れたシステムを自動調査してくれ 起動してくれるのみならず、DebianやUbuntuのLIVE ISOイメージを DOSのFATファイルシステムのメディアに複数書き込むだけで、これらを 選択起動できるようにしてくれる優れものです。
よく分かっていませんが、ディスクの入れ替えやインストーをして、その後 元のディスクに戻した際にUEFIでブートしなくなったことを経験しました。 そんな際にSuper Grub2だと素直に起動しました。この際に、ただ起動後 update-grubとしただけでは、起動設定更新がうまく行かなかったことが ありました。こんな時にはまず以下を実行しました。
$ sudo dpkg-reconfigure grub-efi-amd64 これだとNVRAM variablesの更新他いろいろするようです。さらにBIOSの ブートの優先順位をさわることも有効でした。(古いMBなのでBIOSが賢くない 気がしました。)
実際にSuper Grub2に用意した8GBのUSBキーでは、レスキュー用のLinuxの Live imageとして以下のISOイメージを入れました。
 Rescatux boot-repair Debian live install image  こららがあると思うだけで、UEFIとMBRの両方のシステム対応なので 安心感があります。
ここで使うISOイメージですが、Debianの標準のインストール用の ISOイメージは、上記が用いるGrub2のループマウントでは 使えないようです。
Debianの標準のインストール用のISOイメージは、全イメージを 生のUSBキーに直接cpかddで書いたものを準備する必要があります。 １つ古い小さなUSBキーに書いて手元に置いています。
このDebianの標準のインストール用のISOイメージですが、 わたしは視力があり音声サポートがいらないので、D-Iが作っている mini.iso を使っています。46MBと極端に小さいので便利です。
実際のインストールの際には、キーファイル(GNUPG/SSHデーター)に加え チェックアウトされた
 VIMの設定集 ローカルのshell script集  他のファイルの入った小型バックアップのUSBキーを準備すると効率的に 進められます。</description>
    </item>
    
    <item>
      <title>dmesg for SATA</title>
      <link>/en/2020/04/29/dmesg-sata/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/en/2020/04/29/dmesg-sata/</guid>
      <description>After having a loose SATA cable problem and fixed it, I happen to see dmesg as:
$ sudo dmesg ... [ 2.373152] sd 0:0:0:0: [sda] 937703088 512-byte logical blocks: (480 GB/447 GiB) [ 2.373156] sd 0:0:0:0: [sda] Write Protect is off [ 2.373158] sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00 [ 2.373165] sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn&#39;t support DPO or FUA [ 2.373173] sd 2:0:0:0: [sdb] 468862128 512-byte logical blocks: (240 GB/224 GiB) [ 2.</description>
    </item>
    
    <item>
      <title>Wayland</title>
      <link>/en/2019/09/21/wayland/</link>
      <pubDate>Sat, 21 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/en/2019/09/21/wayland/</guid>
      <description>Standard GNOME desktop under Debian Buster 10 has moved to use Wayland.
Although the migration from X to Wayland is mostly transparent to the end-user like me, there are some exceptions.
How to check if an application uses Wayland or X  Execute &amp;ldquo;xeyes &amp;amp;&amp;rdquo; from a terminal console . Move mouse pointer over to an application in question. If eyes are responsive, it&amp;rsquo;s an X application. If eyes aren&amp;rsquo;t responsive, it&amp;rsquo;s a Wayland application.</description>
    </item>
    
  </channel>
</rss>
